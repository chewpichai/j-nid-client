<?xml version="1.0" encoding="utf-8"?>
<mx:Panel title="{resourceManager.getString('MakeOrder', 'Order')}"
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:jn="com.j_nid.components.mxml.*"
	xmlns:adobe="http://www.adobe.com/2006/fc"
	layout="vertical" 
	paddingLeft="5" paddingRight="5"
	paddingTop="5"
	creationComplete="init(event)">
	
	<mx:Metadata>
		[ResourceBundle("MakeOrder")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import mx.resources.ResourceBundle;
			import mx.managers.PopUpManager;
			import mx.managers.DragManager;
			import mx.core.Application;
			import mx.controls.Alert;
			import com.j_nid.components.mxml.forms.OrderProcessForm;
			import com.j_nid.models.Product;
			import com.j_nid.models.Order;
			import com.j_nid.models.JNidModelLocator;
			import com.j_nid.models.OrderItem;
			import mx.events.FlexEvent;
			import mx.events.DragEvent;
			
			[Bindable]
			private var order:Order;
			[Bindable]
			public var model:JNidModelLocator = JNidModelLocator.getInstance();
			
			private function init(e:FlexEvent):void {
				initData();
			}
			
			private function initData():void {
				order = new Order();
				setDefaultPerson();
			}
			
			private function dragEnterListener(e:DragEvent):void {
				DragManager.acceptDragDrop(DataGrid(e.currentTarget));
			}
			
			private function dragDropListener(e:DragEvent):void {
				var product:Product = e.dragSource.dataForFormat("items")[0];
				var orderItem:OrderItem = new OrderItem(product);
				addOrderItem(orderItem);
				orderItemList.verticalScrollPosition = orderItemList.maxVerticalScrollPosition;
			}
			
			private function addOrderItem(item:OrderItem):void {
				for each (var obj:OrderItem in order.orderItems) {
					if (item.product.id == obj.product.id) {
						obj.unit += item.unit;
						return;
					}
				}
				order.addItem(item);
			}
			
			private function clearListener(e:MouseEvent):void {
				order.clearItems();
			}
			
			private function removeListener(e:MouseEvent):void {
				var item:OrderItem = OrderItem(orderItemList.selectedItem);
				order.removeItem(item);
			}
			
			private function processListener(e:MouseEvent):void {
				if (isValid()) {
					order.person = model.getPersonByName(personFiled.text);
					order.notation = notationField.text;
					var orderProcessForm:OrderProcessForm = OrderProcessForm(
						PopUpManager.createPopUp(Application(Application.application), 
							OrderProcessForm, true)
					);
					orderProcessForm.order = order;
				} else {
					Alert.show("Your order must contain at least 1 item.", "Error");
				}
			}
			
			private function isValid():Boolean {
				return order.orderItems.length > 0;
			}
			
			private function setDefaultPerson():void {
				personFiled.typedText = model.people.source[new Date().hours].name;
			}
		]]>
	</mx:Script>
	
	<mx:HBox width="100%" verticalAlign="middle">
		
		<mx:Label text="{resourceManager.getString('MakeOrder', 'CustomerName')}:"/>
		
		<adobe:AutoComplete id="personFiled" 
			labelField="name" 
			dataProvider="{model.people.source}"
			width="100%"/>
	</mx:HBox>
	
	<mx:DataGrid id="orderItemList"
		dataProvider="{order.orderItems}"
		dragDrop="dragDropListener(event)" dragEnter="dragEnterListener(event)"
		itemEditEnd="event.preventDefault()" editable="true" 
		wordWrap="true" variableRowHeight="true" 
		width="100%" height="100%"
		styleName="cartItemList">
		<mx:columns>
			<mx:DataGridColumn 
				headerText="{resourceManager.getString('MakeOrder', 'Quantity')}" 
				dataField="quantity" 
				editorDataField="value"
				rendererIsEditor="true" 
				headerStyleName="dgHeader"
				width="70">
				<mx:itemRenderer>
					<mx:Component>
<mx:NumericStepper minimum="1" maximum="1000" 
	change="{data.quantity = value}"/>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			
			<mx:DataGridColumn
				headerText="{resourceManager.getString('MakeOrder', 'Name')}"
				dataField="name" 
				editable="false"
				headerStyleName="dgHeader"
				width="150"/>
				
			<mx:DataGridColumn
				headerText="{resourceManager.getString('MakeOrder', 'Unit')}"
				dataField="unit" 
				editorDataField="value"
				rendererIsEditor="true" 
				headerStyleName="dgHeader"
				width="70">
				<mx:itemRenderer>
					<mx:Component>
<mx:NumericStepper minimum="1" maximum="100000" 
	change="{data.unit = value}"/>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn
				headerText="{resourceManager.getString('MakeOrder', 'PricePerUnit')}"
				dataField="pricePerUnit" 
				editorDataField="value"
				rendererIsEditor="true"
				headerStyleName="dgHeader"
				width="85">
				<mx:itemRenderer>
					<mx:Component>
<mx:NumericStepper minimum="1" maximum="10000" stepSize="0.25" 
	change="{data.pricePerUnit = value}"/>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn
				headerText="{resourceManager.getString('MakeOrder', 'Total')}"
				dataField="total"
				textAlign="right"
				editable="false"
				headerStyleName="dgHeader"
				width="85"/>
		</mx:columns>
	</mx:DataGrid>
	
	<mx:Text id="totalTxt" 
		text="{resourceManager.getString('MakeOrder', 'Total')} {order.total}" 
		textAlign="right" 
		paddingRight="10"
		width="100%" height="30"/>
	
	<mx:ControlBar>
		<mx:TextArea id="notationField"
			width="100%" height="60"/>
		<mx:Button label="{resourceManager.getString('MakeOrder', 'Clear')}"
			click="clearListener(event)"/>
		<mx:Button label="{resourceManager.getString('MakeOrder', 'Remove')}"
			click="removeListener(event)"/>
		<mx:Button label="{resourceManager.getString('MakeOrder', 'Process')}"
			click="processListener(event)"/>
	</mx:ControlBar>
</mx:Panel>
