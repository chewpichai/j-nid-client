<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	creationComplete="creationComplete(event)"
	width="100%" height="100%">
	
	<mx:Metadata>
		[ResourceBundle("PaymentPage")]
	</mx:Metadata>

	<mx:Script>
		<![CDATA[
			import mx.resources.ResourceBundle;
			import com.j_nid.utils.PrintUtils;
			import mx.binding.utils.ChangeWatcher;
			import com.j_nid.utils.DateUtils;
			import mx.utils.ObjectProxy;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.FlexEvent;
			import mx.controls.List;
			import mx.collections.ListCollectionView;
			import mx.collections.ICollectionView;
			import com.j_nid.controls.EventNames;
			import com.j_nid.utils.CairngormUtils;
			import mx.collections.SortField;
			import mx.collections.Sort;
			import mx.messaging.channels.AMFChannel;
			import com.j_nid.models.Payment;
			import com.j_nid.models.Order;
			import mx.collections.IViewCursor;
			import mx.collections.ArrayCollection;
			import com.j_nid.models.Person;
			import com.j_nid.models.JNidModelLocator;
			
			[Bindable]
			private var model:JNidModelLocator = JNidModelLocator.getInstance();
			
			private function creationComplete(e:FlexEvent):void {
				initData();
			}
			
			private function initData():void {
				startDateField.selectedDate = DateUtils.moveDateByDay(new Date(), -180);
				var rangeStart:Date = DateUtils.moveDateByDay(new Date(), 1);
				startDateField.disabledRanges = [{rangeStart: rangeStart}];
				endDateField.disabledRanges = [{rangeStart: rangeStart}, {rangeEnd: rangeStart}];
			}
			
			private function dateChange(e:CalendarLayoutChangeEvent):void {
				var startDate:Date = new Date(startDateField.selectedDate.time);
				var endDate:Date = new Date(endDateField.selectedDate.time);
				var disabledRanges:Array = endDateField.disabledRanges;
				disabledRanges[1] = {rangeEnd: startDate};
				endDateField.disabledRanges = disabledRanges;
				disabledRanges = startDateField.disabledRanges;
				disabledRanges[0] = {rangeStart: endDate};
				startDateField.disabledRanges = disabledRanges;
				var transactions:ArrayCollection = ArrayCollection(transactionList.dataProvider);
				filterTransaction(transactions,	startDate, endDate);
			}
			
			private function filterTransaction(transaction:ArrayCollection, 
				start:Date, end:Date):void {
				
				if (transaction != null) {
					end = DateUtils.moveDateByDay(end, 1);
					transaction.filterFunction = function(obj:Object):Boolean {
						return obj.created > start && obj.created < end;
					}
					transaction.refresh();
				}
			}
			
			private function payBtnClickListener(evt:MouseEvent):void {
				var payment:Payment = new Payment();
				payment.amount = amountField.value;
				payment.notation = notationField.text;
				payment.person = Person(personList.selectedItem);
				CairngormUtils.dispatchEvent(EventNames.CREATE_PAYMENT, payment);
			}
			
			public function setPerson(person:Person):void {
				var index:int = ListCollectionView(personList.dataProvider).getItemIndex(person);
				personList.selectedIndex = index;
				personList.scrollToIndex(index);
			}
			
			private function printBtnClick(e:MouseEvent):void {
				PrintUtils.printPayment();
			}
			
			private function filterPeople(peopleArray:Array):ArrayCollection {
				var people:ArrayCollection = new ArrayCollection(peopleArray);
				people.filterFunction = function(item:Object):Boolean {
					return Person(item).outstandingTotal != 0;
				};
				people.refresh();
				return people;
			}
		]]>
	</mx:Script>
	
	<mx:DateFormatter id="dateFormatter" formatString="DD-MM-YY J:NN:SS"/>

	<mx:Panel title="{resourceManager.getString('PaymentPage', 'Customer')}"
		layout="absolute"
		width="380" height="100%" >
		
		<mx:DataGrid id="personList" 
			dataProvider="{filterPeople(model.people.source)}"
			width="100%" height="100%">
			<mx:columns>
				<mx:DataGridColumn dataField="name"
					headerText="{resourceManager.getString('PaymentPage', 'Name')}"
					headerStyleName="dgHeader"/>
				<mx:DataGridColumn dataField="outstandingTotal" 
					headerText="{resourceManager.getString('PaymentPage', 'OutstandingTotal')}"
					headerStyleName="dgHeader"/>
			</mx:columns>
		</mx:DataGrid>
	</mx:Panel>
	
	<mx:Panel title="{resourceManager.getString('PaymentPage', 'Detail')}"
		layout="vertical"
		paddingLeft="5" paddingRight="5"
		paddingTop="10" paddingBottom="10"
		width="100%" height="100%">
		
		<mx:HBox verticalAlign="middle"
			width="100%">
			
			<mx:Label text="{resourceManager.getString('PaymentPage', 'PayAmount')}:"/>
			
			<mx:NumericStepper id="amountField" 
				maximum="1000000" 
				width="250"/>
				
			<mx:Label text="{resourceManager.getString('PaymentPage', 'Note')}:"/>
			
			<mx:TextArea id="notationField"
				width="100%"/>
			
			<mx:Button id="payBtn"
				label="{resourceManager.getString('PaymentPage', 'Pay')}" 
				click="payBtnClickListener(event)" 
				width="100"/>
		</mx:HBox>
		
		<mx:DataGrid id="transactionList"
			dataProvider="{personList.selectedItem.transactions}"
			width="100%" height="100%">
			<mx:columns>
				<mx:DataGridColumn 
					headerText="{resourceManager.getString('PaymentPage', 'Date')}"
					headerStyleName="dgHeader">
					<mx:itemRenderer>
						<mx:Component>
<mx:Label text="{outerDocument.dateFormatter.format(data.created)}"/>
						</mx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn dataField="amount"
					headerText="{resourceManager.getString('PaymentPage', 'Paid')}"
					headerStyleName="dgHeader"/>
				<mx:DataGridColumn dataField="total"
					headerText="{resourceManager.getString('PaymentPage', 'Outstanding')}"
					headerStyleName="dgHeader"/>
				<mx:DataGridColumn dataField="notation"
					headerText="{resourceManager.getString('PaymentPage', 'Note')}"
					headerStyleName="dgHeader"/>
			</mx:columns>
		</mx:DataGrid>
		
		<mx:ControlBar>
			<mx:Label text="{resourceManager.getString('PaymentPage', 'StartDate')}:"/>
			
			<mx:DateField id="startDateField"
				formatString="DD-MM-YYYY"
				change="dateChange(event)"/>
				
			<mx:Label text="{resourceManager.getString('PaymentPage', 'ToDate')}:"/>
			
			<mx:DateField id="endDateField"
				selectedDate="{new Date()}"
				formatString="DD-MM-YYYY"
				change="dateChange(event)"/>
				
			<mx:Spacer width="100%"/>
			<mx:Button label="{resourceManager.getString('PaymentPage', 'Print')}"
				click="printBtnClick(event)"/>
		</mx:ControlBar>
	</mx:Panel>
	
	<mx:NumberValidator id="numberValidator" 
		source="{amountField}" property="value"
		trigger="{payBtn}" triggerEvent="click"
		minValue="1"/>
</mx:HBox>
