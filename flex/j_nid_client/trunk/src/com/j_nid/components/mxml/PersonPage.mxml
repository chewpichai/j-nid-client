<?xml version="1.0" encoding="utf-8"?>
<mx:VBox
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:jn="com.j_nid.validators.*"
	show="showHandler(event)"
	creationComplete="init(event)"
	width="100%"
	height="100%">
	
	<mx:Metadata>
		[ResourceBundle("PersonPage")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import com.j_nid.controls.ApplicationManager;
			import com.j_nid.events.JNidEvent;
			import com.j_nid.components.mxml.forms.PersonForm;
			import mx.core.Application;
			import com.j_nid.utils.CairngormUtils;
			import mx.collections.SortField;
			import mx.collections.Sort;
			import com.j_nid.models.Person;
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.resources.ResourceBundle;
			
			private var isEdit:Boolean = false;
			private var personSelectedIndex:int = -1;
			private var errorMessage:String;
            private var appMgr:ApplicationManager = 
                ApplicationManager.getInstance();
            [Bindable]
            private var people:ArrayCollection;
            private var personForm:PersonForm;
            
            private function init(e:FlexEvent):void {
                people = new ArrayCollection(Person.all());
                var sort:Sort = new Sort();
                sort.fields = [new SortField("name")];
                people.sort = sort;
            }
            
            private function showHandler(e:FlexEvent):void {
                people.refresh();
            }
            
            private function personSaved(e:JNidEvent):void {
                CairngormUtils.dispatchEvent(JNidEvent.CLOSE_POPUP, personForm);
                people.refresh();
                var person:Person = Person(e.data);
                personList1.selectedItem = person;
                personList2.selectedItem = person;
            }
            
            private function searchFieldChangeListener(e:Event):void {
                var sort:Sort = new Sort();
                sort.fields = [new SortField("sortIndex"), new SortField("name")];
                people.sort;
                people.filterFunction =
                    function(item:Object):Boolean {
                        var person:Person = Person(item);
                        return person.name.indexOf(searchField.text) != -1;
                    };
               people.refresh();
            }
            
            internal function updatePerson(person:Person):void {
                person.save();
            }
            
            private function newClickListener(e:MouseEvent):void {
                var person:Person = new Person();
                person.addEventListener(JNidEvent.PERSON_CREATED, personSaved);
                personForm = PersonForm(appMgr.createPopUp(PersonForm));
                personForm.person = person;
            }
            
            public function personListDoubleClick(e:MouseEvent):void {
                var person:Person = Person(e.currentTarget.selectedItem);
                person.addEventListener(JNidEvent.PERSON_UPDATED, personSaved);
                personForm = PersonForm(appMgr.createPopUp(PersonForm));
                personForm.person = person;
            }
        ]]>
    </mx:Script>
    
    <mx:HBox
        verticalAlign="middle"
        width="100%">
        
        <mx:Label
            text="{resourceManager.getString('PersonPage', 'Search')}:"/>
        
        <mx:TextInput id="searchField"
            change="searchFieldChangeListener(event)"
            width="100%"/>
        
        <mx:Button id="newBtn"
            label="{resourceManager.getString('PersonPage', 'Add')}"
            click="newClickListener(event)"/>
    </mx:HBox>
    
    <mx:TabNavigator
        paddingLeft="5"
        paddingRight="5"
        width="100%"
        height="100%">
        
        <mx:VBox
            label="{resourceManager.getString('PersonPage', 'Person')}">
            
            <mx:DataGrid id="personList1"
                dataProvider="{people}"
                doubleClickEnabled="true"
                doubleClick="personListDoubleClick(event)"
                headerStyleName="centerHeader"
                width="100%"
                height="100%">
                
                <mx:columns>
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString('PersonPage', 'Name')}"
                        dataField="name"
                        width="250"/>
                        
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString(
                                            'PersonPage', 'PhoneNumberHeader', [1])}">
                        
                        <mx:itemRenderer>
                            <mx:Component>
<mx:Label>
<mx:Script>
    <![CDATA[
        override public function set data(obj:Object):void {
            super.data = obj;
            text = data.phoneNumbers[0];
        }
    ]]>
</mx:Script>
</mx:Label>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString(
                                            'PersonPage', 'PhoneNumberHeader', [2])}">
                        
                        <mx:itemRenderer>
                            <mx:Component>
<mx:Label>
<mx:Script>
    <![CDATA[
        override public function set data(obj:Object):void {
            super.data = obj;
            text = data.phoneNumbers[1];
        }
    ]]>
</mx:Script>
</mx:Label>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString(
                                            'PersonPage', 'PhoneNumberHeader', [3])}">
                        
                        <mx:itemRenderer>
                            <mx:Component>
<mx:Label>
<mx:Script>
    <![CDATA[
        override public function set data(obj:Object):void {
            super.data = obj;
            text = data.phoneNumbers[2];
        }
    ]]>
</mx:Script>
</mx:Label>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString(
                                            'PersonPage', 'PhoneNumberHeader', [4])}">
                        
                        <mx:itemRenderer>
                            <mx:Component>
<mx:Label>
<mx:Script>
    <![CDATA[
        override public function set data(obj:Object):void {
            super.data = obj;
            text = data.phoneNumbers[3];
        }
    ]]>
</mx:Script>
</mx:Label>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                </mx:columns>
            </mx:DataGrid>
        </mx:VBox>
        
        <mx:VBox
            label="{resourceManager.getString('PersonPage', 'PersonType')}">
            
            <mx:DataGrid id="personList2"
                dataProvider="{people}"
                doubleClickEnabled="true"
                doubleClick="personListDoubleClick(event)"
                headerStyleName="centerHeader"
                width="100%"
                height="100%">
                
                <mx:columns>
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString('PersonPage', 'Name')}"
                        dataField="name"
                        width="250"/>
                        
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString('PersonPage', 'Customer')}" 
                        textAlign="center"
                        width="40">
                        
                        <mx:itemRenderer>
                            <mx:Component>
<mx:CheckBox selected="{data.isCustomer}" change="changeListener(event)">
<mx:Script>
    <![CDATA[
        import com.j_nid.models.Person;
        
        private function changeListener(e:Event):void {
            var person:Person = Person(data);
            person.isCustomer = e.currentTarget.selected;
            outerDocument.updatePerson(person);
        }
    ]]>
</mx:Script>
</mx:CheckBox>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString('PersonPage', 'Supplier')}"
                        textAlign="center"
                        width="40">
                        
                        <mx:itemRenderer>
                            <mx:Component>
<mx:CheckBox selected="{data.isSupplier}" change="changeListener(event)">
<mx:Script>
    <![CDATA[
        import com.j_nid.models.Person;
        
        private function changeListener(e:Event):void {
            var person:Person = Person(data);
            person.isSupplier = e.currentTarget.selected;
            outerDocument.updatePerson(person);
        }
    ]]>
</mx:Script>
</mx:CheckBox>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString('PersonPage', 'General')}"
                        textAlign="center"
                        width="40">
                        
                        <mx:itemRenderer>
                            <mx:Component>
<mx:CheckBox selected="{data.isGeneral}" change="changeListener(event)">
<mx:Script>
    <![CDATA[
        import com.j_nid.models.Person;
        
        private function changeListener(e:Event):void {
            var person:Person = Person(data);
            person.isGeneral = e.currentTarget.selected;
            outerDocument.updatePerson(person);
        }
    ]]>
</mx:Script>
</mx:CheckBox>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                </mx:columns>
            </mx:DataGrid>
        </mx:VBox>
    </mx:TabNavigator>
</mx:VBox>
