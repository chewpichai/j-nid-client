<?xml version="1.0" encoding="utf-8"?>
<mx:VBox
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:jn="com.j_nid.validators.*"
	creationComplete="init(event)"
	width="100%" height="100%">
	
	<mx:Metadata>
		[ResourceBundle("PersonPage")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			import com.j_nid.components.mxml.forms.PersonForm;
			import mx.core.Application;
			import mx.managers.PopUpManager;
			import com.j_nid.controls.EventNames;
			import com.j_nid.utils.CairngormUtils;
			import com.j_nid.models.JNidModelLocator;
			import mx.collections.SortField;
			import mx.collections.Sort;
			import com.j_nid.models.Person;
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.resources.ResourceBundle;
			
			private var isEdit:Boolean = false;
			private var personSelectedIndex:int = -1;
			private var errorMessage:String;
			[Bindable]
			public var model:JNidModelLocator = JNidModelLocator.getInstance();
			private var personForm:PersonForm;
			
			private function init(e:FlexEvent):void {
				
			}
			
			private function getPeople(personArray:Array):ArrayCollection {
				var people:ArrayCollection = new ArrayCollection(personArray);
				var sort:Sort = new Sort();
				sort.fields = [new SortField("name")];
				people.sort = sort;
				people.refresh();
				return people;
			}
			
			private function searchFieldChangeListener(e:Event):void {
				personList.dataProvider.filterFunction = function(item:Object):Boolean {
					var person:Person = Person(item);
					person.sortIndex = person.name.indexOf(searchField.text);
					return person.sortIndex != -1;
				};
				var sort:Sort = new Sort();
				sort.fields = [new SortField("sortIndex"), new SortField("name")];
				personList.dataProvider.sort = sort;
				personList.dataProvider.refresh();
			}
			
			internal function updatePerson(person:Person):void {
				CairngormUtils.dispatchEvent(EventNames.UPDATE_PERSON, person);
			}
			
			private function newClickListener(e:MouseEvent):void {
				personForm = PersonForm(PopUpManager.createPopUp(
					Application(Application.application),
					PersonForm, true));
				personForm.person = new Person();
			}
			
			public function closeForm():void {
				personForm.close();
				personList.dataProvider.refresh();
			}
			
			public function personListDoubleClick(e:MouseEvent):void {
				personForm = PersonForm(PopUpManager.createPopUp(
					Application(Application.application),
					PersonForm, true));
				personForm.person = Person(personList.selectedItem);
			}
		]]>
	</mx:Script>
		
	<mx:HBox
		verticalAlign="middle"
		width="100%">
		
		<mx:Label text="{resourceManager.getString('PersonPage', 'Search')}:"/>
		
		<mx:TextInput id="searchField" 
			change="searchFieldChangeListener(event)"
			width="100%"/>
		
		<mx:Button id="newBtn"
			label="{resourceManager.getString('PersonPage', 'Add')}"
			click="newClickListener(event)"/>
	</mx:HBox>
	
	<mx:DataGrid id="personList" 
		dataProvider="{getPeople(model.people.source)}"
		doubleClickEnabled="true"
		doubleClick="personListDoubleClick(event)"
		width="100%" height="100%">
		
		<mx:columns>
			<mx:DataGridColumn
				headerText="{resourceManager.getString('PersonPage', 'Name')}"
				headerStyleName="dgHeader"
				dataField="name"/>
			<mx:DataGridColumn
				headerText="{resourceManager.getString('PersonPage', 'Customer')}" 
				textAlign="center"
				width="75">
				<mx:itemRenderer>
					<mx:Component>
<mx:CheckBox selected="{data.isCustomer}" change="changeListener(event)">
<mx:Script>
	<![CDATA[
		import com.j_nid.models.Person;
		
		private function changeListener(e:Event):void {
			var person:Person = Person(data);
			person.isCustomer = e.currentTarget.selected;
			outerDocument.updatePerson(person);
		}
	]]>
</mx:Script>
</mx:CheckBox>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn
				headerText="{resourceManager.getString('PersonPage', 'Supplier')}"
				textAlign="center"
				width="75">
				<mx:itemRenderer>
					<mx:Component>
<mx:CheckBox selected="{data.isSupplier}" change="changeListener(event)">
<mx:Script>
	<![CDATA[
		import com.j_nid.models.Person;
		
		private function changeListener(e:Event):void {
			var person:Person = Person(data);
			person.isSupplier = e.currentTarget.selected;
			outerDocument.updatePerson(person);
		}
	]]>
</mx:Script>
</mx:CheckBox>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
			<mx:DataGridColumn
				headerText="{resourceManager.getString('PersonPage', 'General')}"
				textAlign="center"
				width="75">
				<mx:itemRenderer>
					<mx:Component>
<mx:CheckBox selected="{data.isGeneral}" change="changeListener(event)">
<mx:Script>
	<![CDATA[
		import com.j_nid.models.Person;
		
		private function changeListener(e:Event):void {
			var person:Person = Person(data);
			person.isGeneral = e.currentTarget.selected;
			outerDocument.updatePerson(person);
		}
	]]>
</mx:Script>
</mx:CheckBox>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
</mx:VBox>
