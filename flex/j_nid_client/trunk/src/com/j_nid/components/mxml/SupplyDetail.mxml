<?xml version="1.0" encoding="utf-8"?>
<mx:Panel title="{resourceManager.getString('MakeSupply', 'Supply')}"
    xmlns:mx="http://www.adobe.com/2006/mxml" 
    xmlns:jn="com.j_nid.components.mxml.*"
    xmlns:adobe="http://www.adobe.com/2006/fc"
    layout="vertical" 
    paddingLeft="5" paddingRight="5"
    paddingTop="5">
    
    <mx:Metadata>
        [ResourceBundle("MakeSupply")]
    </mx:Metadata>
    
    <mx:Script>
        <![CDATA[
            import mx.collections.ArrayCollection;
            import com.j_nid.models.Person;
            import mx.resources.ResourceBundle;
            import mx.managers.PopUpManager;
            import mx.managers.DragManager;
            import mx.core.Application;
            import mx.controls.Alert;
            import com.j_nid.components.mxml.forms.SupplyProcessForm;
            import com.j_nid.models.Supply;
            import com.j_nid.models.Product;
            import com.j_nid.models.JNidModelLocator;
            import com.j_nid.models.SupplyItem;
            import mx.events.DragEvent;
            
            [Bindable]
            public var supply:Supply;
            [Bindable]
            public var supplier:Person;
            [Bindable]
            public var people:ArrayCollection;
            [Bindable]
            public var model:JNidModelLocator = JNidModelLocator.getInstance();
            
            private function dragEnterListener(e:DragEvent):void {
                DragManager.acceptDragDrop(DataGrid(e.currentTarget));
            }
            
            private function dragDropListener(e:DragEvent):void {
                var product:Product = e.dragSource.dataForFormat("items")[0];
                var supplyItem:SupplyItem = new SupplyItem(product);
                addSupplyItem(supplyItem);
            }
            
            public function addSupplyItem(item:SupplyItem):void {
                for each (var obj:SupplyItem in supply.supplyItems) {
                    if (item.product.id == obj.product.id) {
                        obj.unit += item.unit;
                        return;
                    }
                }
                supply.addSupplyItem(item);
                supplyItemList.verticalScrollPosition = 
                    supplyItemList.maxVerticalScrollPosition;
            }
            
            private function clearListener(e:MouseEvent):void {
                supply.clearSupplyItems();
            }
            
            private function removeListener(e:MouseEvent):void {
                var item:SupplyItem = SupplyItem(supplyItemList.selectedItem);
                if (item != null) {
                    supply.removeSupplyItem(item);
                }
            }
            
            private function processListener(e:MouseEvent):void {
                if (isValid()) {
                    supply.person = model.getPersonByName(personFiled.text);
                    supply.notation = notationField.text;
                    var processForm:SupplyProcessForm = SupplyProcessForm(
                        PopUpManager.createPopUp(
                            Application(Application.application),
                            SupplyProcessForm, true));
                    processForm.supply = supply;
                } else {
                    Alert.show("Your supply must contain at least 1 item.", "Error");
                }
            }
            
            private function isValid():Boolean {
                return true;
            }
        ]]>
    </mx:Script>
    
    <mx:HBox width="100%" verticalAlign="middle">
        
        <mx:Label
            text="{resourceManager.getString('MakeSupply', 'SupplierName')}:"/>
        
        <adobe:AutoComplete id="personFiled" 
            labelField="name" 
            dataProvider="{people}"
            width="100%"/>
    </mx:HBox>
    
    <mx:DataGrid id="supplyItemList" 
        dataProvider="{supply.supplyItems}"
        dragDrop="dragDropListener(event)" 
        dragEnter="dragEnterListener(event)"
        itemEditEnd="event.preventDefault()" 
        editable="true" 
        wordWrap="true" variableRowHeight="true" 
        width="100%" height="100%"
        styleName="cartItemList">
        <mx:columns>
            <mx:DataGridColumn 
                headerText="{resourceManager.getString(
                                    'MakeSupply', 'Quantity')}"
                dataField="quantity" 
                editorDataField="value"
                rendererIsEditor="true" 
                headerStyleName="dgHeader"
                width="70">
                <mx:itemRenderer>
                    <mx:Component>
<mx:NumericStepper minimum="1" maximum="1000" 
    change="{data.quantity = value}"/>
                    </mx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn 
                headerText="{resourceManager.getString('MakeSupply', 'Name')}" 
                dataField="name" 
                editable="false" 
                headerStyleName="dgHeader"
                width="150"/>
            <mx:DataGridColumn 
                headerText="{resourceManager.getString('MakeSupply', 'Unit')}"
                dataField="unit" 
                editorDataField="value" 
                rendererIsEditor="true" 
                headerStyleName="dgHeader"
                width="70">
                <mx:itemRenderer>
                    <mx:Component>
<mx:NumericStepper minimum="1" maximum="100000" 
    change="{data.unit = value}"/>
                    </mx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn 
                headerText="{resourceManager.getString(
                                    'MakeSupply', 'PricePerUnit')}"
                dataField="pricePerUnit" 
                editorDataField="value"
                rendererIsEditor="true"
                headerStyleName="dgHeader"
                width="85">
                <mx:itemRenderer>
                    <mx:Component>
<mx:NumericStepper minimum="1" maximum="10000" stepSize="0.25" 
    change="{data.pricePerUnit = value}"/>
                    </mx:Component>
                </mx:itemRenderer>
            </mx:DataGridColumn>
            <mx:DataGridColumn 
                headerText="{resourceManager.getString('MakeSupply', 'Total')}"
                dataField="total" 
                editable="false"
                headerStyleName="dgHeader"
                width="85"/>
        </mx:columns>
    </mx:DataGrid>
    
    <mx:Text id="totalTxt" 
        text="{resourceManager.getString('MakeSupply', 'Total')}: {supply.total}" 
        textAlign="right" 
        paddingRight="10"
        width="100%" height="30"/>
    
    <mx:ControlBar>
        <mx:TextArea id="notationField" 
            width="100%" height="60"/>
        
        <mx:Button label="{resourceManager.getString('MakeSupply', 'Clear')}"
            click="clearListener(event)"/>
        
        <mx:Button label="{resourceManager.getString('MakeSupply', 'Remove')}"
        	enabled="{supplyItemList.selectedItem != null}"
            click="removeListener(event)"/>
        
        <mx:Button label="{resourceManager.getString('MakeSupply', 'Process')}"
            click="processListener(event)"/>
    </mx:ControlBar>
</mx:Panel>
