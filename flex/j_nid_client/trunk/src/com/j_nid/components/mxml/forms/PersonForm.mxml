<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow 
    title="{resourceManager.getString('PersonPage', 'PersonForm')}"
    xmlns:mx="http://www.adobe.com/2006/mxml"
    creationComplete="init(event)"
    width="400"
    height="500">
    
    <mx:Metadata>
        [ResourceBundle("PersonPage")]
    </mx:Metadata>
    
    <mx:Script>
        <![CDATA[
            import mx.collections.ArrayCollection;
        	import mx.collections.ListCollectionView;
        	import mx.controls.Alert;
            import mx.controls.LinkButton;
        	import mx.events.CloseEvent;
            import mx.events.FlexEvent;
            import mx.resources.ResourceBundle;
        	import mx.utils.StringUtil;
        	import com.j_nid.controls.ApplicationManager;
            import com.j_nid.events.JNidEvent;
            import com.j_nid.models.BankAccount;
            import com.j_nid.models.Person;
            import com.j_nid.models.PhoneNumber;
            import com.j_nid.utils.CairngormUtils;
            
            [Bindable]
            public var appMgr:ApplicationManager = 
                ApplicationManager.getInstance();
            [Bindable]
            private var _person:Person;
            [Bindable]
            private var phoneNumbers:ArrayCollection;
            [Bindable]
            private var bankAccounts:ArrayCollection;
            private var errMsg:String;
            private var closeBtn:LinkButton;
            
            [Bindable]
            public function set person(obj:Person):void {
                _person = obj;
                phoneNumbers = new ArrayCollection(_person.phoneNumbers);
                bankAccounts = new ArrayCollection(_person.bankAccounts);
            }
            
            public function get person():Person {
                return _person;
            }
            
            private function init(e:FlexEvent):void {
                
            }
            
            private function bankAccountDeleted(e:JNidEvent):void {
            	bankAccounts = new ArrayCollection(person.bankAccounts);
            }
            
            private function phoneNumberDeleted(e:JNidEvent):void {
            	phoneNumbers = new ArrayCollection(person.phoneNumbers);
            }
            
            private function bankAccountCreated(e:JNidEvent):void {
                bankAccounts.addItem(e.data);
            }
            
            private function phoneNumberCreated(e:JNidEvent):void {
                phoneNumbers.addItem(e.data);
            }
            
            override protected function createChildren():void {
                super.createChildren();
                closeBtn = new LinkButton();
                closeBtn.label = "x";
                closeBtn.addEventListener(MouseEvent.CLICK, closeBtnClick);
                rawChildren.addChild(closeBtn);
            }
            
            override protected function updateDisplayList(unscaledWidth:Number,
                                            unscaledHeight:Number):void {
                
                super.updateDisplayList(unscaledWidth, unscaledHeight);    
                var margin:int = 4;    
                var pixelsFromTop:int = 5;
                var pixelsFromRight:int = 10;
                closeBtn.setActualSize(30 + margin, 20 + margin);
                var buttonWidth:int = closeBtn.width;
                var xPos:int = unscaledWidth - buttonWidth - pixelsFromRight;
                var yPos:int = pixelsFromTop;
                closeBtn.move(xPos, yPos);
            }
            
            private function closeBtnClick(e:MouseEvent):void {
                CairngormUtils.dispatchEvent(JNidEvent.CLOSE_POPUP, this);
            }
            
            private function saveClickListener(e:MouseEvent):void {
                if (isValid()) {
                    person.name = nameField.text;
                    person.firstName = firstNameField.text;
                    person.lastName = lastNameField.text;
                    person.idCardNumber = idCardNumberFiled.text;
                    person.address = addressField.text;
                    person.detail1 = detail1Field.text;
                    person.detail2 = detail2Field.text;
                    if (person.id == 0) {
                        person.bankAccounts = bankAccounts.source;
                        person.phoneNumbers = phoneNumbers.source;
                    }
                    person.save();
                } else {
                    appMgr.showMessage(errMsg,
                        resourceManager.getString("PersonPage", "ErrorTitle"));
                }
            }
            
            private function isValid():Boolean {
                errMsg = "";
                var personName:String = StringUtil.trim(nameField.text);
                if (personName.length < 1) {
                	errMsg += resourceManager.getString("PersonPage",
                	                   "NameLengthError");
                } else {
                	if (Person.getByName(personName) != null &&
                	    person.name != personName) {
                		
                		errMsg += resourceManager.getString("PersonPage",
                                        "NameDuplicateError");
                	}
                }
                return errMsg.length == 0;
            }
            
            public function getPhoneType(item:Object, column:DataGridColumn):String {
                for (var i:int = 0; i < PhoneNumber.phoneTypes.length(); i++) {
                    if (PhoneNumber.phoneTypes[i].data == item.type) {
                        return PhoneNumber.phoneTypes[i].label;
                    }
                }
                return "";
            }
            
            public function getBankName(item:Object, column:DataGridColumn):String {
                for (var i:int = 0; i < BankAccount.bankNames.length(); i++) {
                    if (BankAccount.bankNames[i].data == item.bank) {
                        return BankAccount.bankNames[i].label;
                    }
                }
                return "";
            }
            
            private function phoneNumberAddBtnClick(e:MouseEvent):void {
                var phoneNumber:PhoneNumber = new PhoneNumber();
                phoneNumber.addEventListener(JNidEvent.PHONE_NUMBER_CREATED,
                    phoneNumberCreated);
                phoneNumber.number = phoneNumberField.text;
                phoneNumber.type = phoneTypeField.selectedItem.data;
                if (person.id > 0) {
                	phoneNumber.personID = person.id;
                    phoneNumber.save();
                } else {
                    phoneNumbers.addItem(phoneNumber);
                }
                clearPhoneNumberForm();
            }
            
            private function clearPhoneNumberForm():void {
                phoneNumberField.text = "";
                phoneTypeField.selectedIndex = 0;
            }
            
            private function clearBankAccountForm():void {
                bankNumberField.text = "";
                bankNameField.selectedIndex = 0;
            }
            
            private function bankAccountAddBtnClick(e:MouseEvent):void {
                var bankAccount:BankAccount = new BankAccount();
                bankAccount.addEventListener(JNidEvent.BANK_ACCOUNT_CREATED,
                    bankAccountCreated);
                bankAccount.number = bankNumberField.text;
                bankAccount.bank = bankNameField.selectedItem.data;
                if (person.id > 0) {
                	bankAccount.personID = person.id;
                    bankAccount.save();
                } else {
                    bankAccounts.addItem(bankAccount);
                }
                clearBankAccountForm();
            }
            
            private function KeyDownHandler(e:KeyboardEvent):void {
            	if (e.keyCode == Keyboard.DELETE) {
            		if (e.currentTarget == bankAccountList) {
            			removeBankAccount();
            		} else if (e.currentTarget == phoneNumberList) {
            			removePhoneNumber();
            		}
            	}
            }
            
            private function removePhoneNumber():void {
                var pn:PhoneNumber = PhoneNumber(phoneNumberList.selectedItem);
                pn.addEventListener(JNidEvent.PHONE_NUMBER_DELETED,
                    phoneNumberDeleted);
                if (pn != null) {
                	appMgr.showConfirm(
                        resourceManager.getString('PersonPage',
                            'ConfirmMessage'),
                        resourceManager.getString('PersonPage',
                            'ConfirmTitle'),
                        function(e:CloseEvent):void {
                            if (e.detail == Alert.OK) {
                                if (person.id > 0) {
                                    pn.remove();
                                } else {
                                    var phoneNumbers:ListCollectionView =
                                            ListCollectionView(
                                                phoneNumberList.dataProvider);
                                    phoneNumbers.removeItemAt(
                                         phoneNumbers.getItemIndex(pn));
                                }
                            }
                        });
                }
            }
            
            private function removeBankAccount():void {
                var ba:BankAccount = BankAccount(bankAccountList.selectedItem);
                ba.addEventListener(JNidEvent.BANK_ACCOUNT_DELETED,
                    bankAccountDeleted);
                if (ba != null) {
                	appMgr.showConfirm(
                        resourceManager.getString('PersonPage',
                            'ConfirmMessage'),
                        resourceManager.getString('PersonPage',
                            'ConfirmTitle'),
                        function(e:CloseEvent):void {
                            if (e.detail == Alert.OK) {
			                	if (person.id > 0) {
			                        ba.remove();
			                    } else {
			                    	var bankAccounts:ListCollectionView =
			                    	        ListCollectionView(
			                    	            bankAccountList.dataProvider);
			                        bankAccounts.removeItemAt(
			                             bankAccounts.getItemIndex(ba));
			                    }
                            }
                        });
                }
            }
        ]]>
    </mx:Script>
    
    <mx:Accordion
        creationPolicy="all"
        width="100%"
        height="100%">
        
        <mx:Form 
            label="{resourceManager.getString('PersonPage', 'Name')}"
            paddingTop="10"
            paddingLeft="10"
            paddingBottom="10"
            paddingRight="10"
            width="100%" height="100%">
            
            <mx:FormItem
                label="{resourceManager.getString('PersonPage', 'Name')}:"
                required="true"
                width="100%">
                
                <mx:TextInput id="nameField" 
                    text="{person.name}"
                    width="100%"/>
            </mx:FormItem>
            
            <mx:FormItem
            	label="{resourceManager.getString('PersonPage', 'FirstName')}:"
                width="100%">
                
                <mx:TextInput id="firstNameField" 
                    text="{person.firstName}"
                    width="100%"/>
            </mx:FormItem>
            
            <mx:FormItem
            	label="{resourceManager.getString('PersonPage', 'LastName')}:"
                width="100%">
                
                <mx:TextInput id="lastNameField" 
                    text="{person.lastName}"
                    width="100%"/>
            </mx:FormItem>
            
            <mx:FormItem
                label="{resourceManager.getString('PersonPage', 'IDCardNo')}:"
                width="100%">
                
                <mx:TextInput id="idCardNumberFiled" 
                    text="{person.idCardNumber}"
                    width="100%"/>
            </mx:FormItem>
        </mx:Form>
        
        <mx:Form
            label="{resourceManager.getString('PersonPage', 'Address')}"
            paddingTop="10"
            paddingRight="10"
            paddingBottom="10" 
            paddingLeft="10"
            width="100%"
            height="100%">
            
            <mx:FormItem
                label="{resourceManager.getString('PersonPage', 'Address')}:"
                width="100%">
                
                <mx:TextArea id="addressField" 
                    text="{person.address}" width="100%"/>
            </mx:FormItem>
            
            <mx:FormItem
                label="{resourceManager.getString('PersonPage', 'Detail')}1:"
                width="100%">
                
                <mx:TextArea id="detail1Field" 
                    text="{person.detail1}"
                    width="100%"/>
            </mx:FormItem>
            
            <mx:FormItem
                label="{resourceManager.getString('PersonPage', 'Detail')}2:"
                width="100%">
                
                <mx:TextArea id="detail2Field" 
                    text="{person.detail2}"
                    width="100%"/>
            </mx:FormItem>
        </mx:Form>
        
        <mx:VBox
            label="{resourceManager.getString('PersonPage', 'PhoneNumber')}"
            width="100%"
            height="100%">
            
            <mx:DataGrid id="phoneNumberList" 
                dataProvider="{phoneNumbers}"
                keyDown="KeyDownHandler(event)"
                headerStyleName="centerHeader"
                width="100%">
                
                <mx:columns>
                    <mx:DataGridColumn
                    	dataField="number"
                        headerText="{resourceManager.getString('PersonPage',
                                          'PhoneNumber')}"/>
                    <mx:DataGridColumn
                    	dataField="type" 
                        headerText="{resourceManager.getString('PersonPage',
                                          'PhoneNumberType')}"
                        labelFunction="getPhoneType"/>
                </mx:columns>
            </mx:DataGrid>
            
            <mx:Spacer height="100%"/>
            
            <mx:Form 
                paddingTop="10"
                paddingRight="10"
                paddingBottom="10" 
                paddingLeft="10"
                width="100%">
                
                <mx:FormItem
                    label="{resourceManager.getString('PersonPage',
                               'PhoneNumber')}:"
                    width="100%">
                    
                    <mx:TextInput id="phoneNumberField"
                        width="100%"/>
                </mx:FormItem>
                
                <mx:FormItem
                    label="{resourceManager.getString('PersonPage',
                                        'PhoneNumberType')}:"
                    width="100%">
                    
                    <mx:ComboBox id="phoneTypeField"
                        dataProvider="{PhoneNumber.phoneTypes}"
                        width="100%"/>
                </mx:FormItem>
                
                <mx:FormItem>
                    <mx:Button
                        label="{resourceManager.getString('PersonPage', 'Add')}"
                        click="phoneNumberAddBtnClick(event)"/>
                </mx:FormItem>
            </mx:Form>
        </mx:VBox>
        
        <mx:VBox
            label="{resourceManager.getString('PersonPage', 'BankAccount')}"
            width="100%"
            height="100%">
            
            <mx:DataGrid id="bankAccountList" 
                dataProvider="{bankAccounts}"
                headerStyleName="centerHeader"
                width="100%">
                
                <mx:columns>
                    <mx:DataGridColumn
                    	dataField="number"
                        headerText="{resourceManager.getString('PersonPage',
                                          'AccountNo')}"/>
                    
                    <mx:DataGridColumn dataField="bank"
                        headerText="{resourceManager.getString('PersonPage',
                                          'Bank')}"
                        labelFunction="getBankName"/>
                </mx:columns>
            </mx:DataGrid>
            
            <mx:Spacer height="100%"/>
            
            <mx:Form 
                paddingTop="10"
                paddingRight="10"
                paddingBottom="10" 
                paddingLeft="10"
                width="100%">
                
                <mx:FormItem label="{resourceManager.getString('PersonPage', 'AccountNo')}:"
                    width="100%">
                    
                    <mx:TextInput id="bankNumberField"
                        width="100%"/>
                </mx:FormItem>
                
                <mx:FormItem label="{resourceManager.getString('PersonPage', 'Bank')}:"
                    width="100%">
                    
                    <mx:ComboBox id="bankNameField"
                        dataProvider="{BankAccount.bankNames}"
                        width="100%"/>
                </mx:FormItem>
                
                <mx:FormItem>
                    <mx:Button label="{resourceManager.getString('PersonPage', 'Add')}"
                        click="bankAccountAddBtnClick(event)"/>
                </mx:FormItem>
            </mx:Form>
        </mx:VBox>
    </mx:Accordion>
    
    <mx:ControlBar horizontalAlign="right">
                
        <mx:Button id="saveBtn"
            label="{resourceManager.getString('PersonPage', 'Save')}" 
            click="saveClickListener(event)"/>
    </mx:ControlBar>
</mx:TitleWindow>
