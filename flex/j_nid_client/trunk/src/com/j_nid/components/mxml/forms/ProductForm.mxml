<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow
    title="{resourceManager.getString('ProductPage', 'ProductForm')}"
    xmlns:mx="http://www.adobe.com/2006/mxml"
    creationComplete="init(event)"
    layout="absolute">
    
    <mx:Metadata>
        [ResourceBundle("ProductPage")]
    </mx:Metadata>
    
    <mx:Script>
        <![CDATA[
            import com.j_nid.controls.ApplicationManager;
            import mx.utils.StringUtil;
            import mx.resources.ResourceBundle;
            import mx.controls.LinkButton;
            import com.j_nid.utils.ModelUtils;
            import com.j_nid.events.JNidEvent;
            import com.j_nid.utils.CairngormUtils;
            import com.j_nid.models.Product;
            import com.j_nid.models.ProductType;
            import mx.managers.PopUpManager;
            import mx.events.FlexEvent;
            
            [Bindable]
            private var model:ModelUtils = ModelUtils.getInstance();
            [Bindable]
            private var appMgr:ApplicationManager =
                ApplicationManager.getInstance();
            [Bindable]
            public var product:Product;
            private var closeBtn:LinkButton;
            private var errMsg:String;
            
            
            private function init(e:FlexEvent):void {
                PopUpManager.centerPopUp(this);
            }
            
            override protected function createChildren():void {
                super.createChildren();
                closeBtn = new LinkButton();
                closeBtn.label = "x";
                closeBtn.addEventListener(MouseEvent.CLICK, closeBtnClick);
                rawChildren.addChild(closeBtn);
            }
            
            override protected function updateDisplayList(unscaledWidth:Number, 
                                            unscaledHeight:Number):void    {
                
                super.updateDisplayList(unscaledWidth, unscaledHeight);    
                var margin:int = 4;    
                var pixelsFromTop:int = 5;
                var pixelsFromRight:int = 10;
                closeBtn.setActualSize(30 + margin, 20 + margin);
                var buttonWidth:int = closeBtn.width;
                var xPos:int = unscaledWidth - buttonWidth - pixelsFromRight;
                var yPos:int = pixelsFromTop;
                closeBtn.move(xPos, yPos);
            }
        
            private function saveProductListener(e:MouseEvent):void {
                if (isValid()) {
                    product.name = nameField.text;
                    product.productTypeID = ProductType(typeField.selectedItem).id;
                    product.unit = unitField.value;
                    product.pricePerUnit = pricePerUnitField.value;
                    product.isSale = isSaleField.selected;
                    if (product.id > 0) {
                        CairngormUtils.dispatchEvent(
                            JNidEvent.UPDATE_PRODUCT, product);
                    } else {
                        CairngormUtils.dispatchEvent(
                            JNidEvent.CREATE_PRODUCT, product);
                    }
                    close();
                } else {
                    appMgr.showMessage(errMsg,
                        resourceManager.getString("ProductPage", "ErrorTitle"));
                }
            }
            
            private function isValid():Boolean {
                errMsg = "";
                var productName:String = StringUtil.trim(nameField.text);
                if (productName.length < 1) {
                    errMsg += resourceManager.getString("ProductPage",
                                   "NameLengthError");
                } else {
                    if (model.getProductByName(productName) != null) {
                        errMsg += resourceManager.getString("ProductPage",
                                       "NameDuplicateError");
                    }
                }
                return errMsg.length == 0;
            }
            
            private function closeBtnClick(e:MouseEvent):void {
                close();
            }
            
            private function close():void {
                PopUpManager.removePopUp(this);
            }
        ]]>
    </mx:Script>
    
    <mx:Form
        width="100%"
        height="100%">
        
        <mx:FormItem 
            label="{resourceManager.getString('ProductPage', 'Name')}:"
            required="true"
            width="100%">
            
            <mx:TextInput id="nameField"
                text="{product.name}"
                width="100%"
                height="30"/>
        </mx:FormItem>
        
        <mx:FormItem
            label="{resourceManager.getString('ProductPage', 'ProductType')}:"
            width="100%">
            
            <mx:ComboBox id="typeField" 
                selectedIndex="{model.productTypes.getItemIndex(
                                    product.productType)}"
                dataProvider="{model.productTypes}"
                itemRenderer="com.j_nid.components.mxml.ProductTypeComboRenderer"
                width="100%" height="30"/>
        </mx:FormItem>
        
        <mx:FormItem
            label="{resourceManager.getString('ProductPage', 'Unit')}:"
            width="100%">
            
            <mx:NumericStepper id="unitField"
                value="{product.unit}"
                minimum="1" maximum="100000"
                width="100%"
                height="30"/>
        </mx:FormItem>
        
        <mx:FormItem
            label="{resourceManager.getString('ProductPage', 'PricePerUnit')}:"
            width="100%">
            
            <mx:NumericStepper id="pricePerUnitField"
                value="{product.pricePerUnit}"
                minimum="0.25" maximum="100000"
                stepSize="0.25"
                width="100%"
                height="30"/>
        </mx:FormItem>
        
        <mx:FormItem
            label="{resourceManager.getString('ProductPage', 'IsSale')}:">
            
            <mx:CheckBox id="isSaleField"
                selected="{product.isSale}"/>
        </mx:FormItem>
        
        <mx:FormItem>
            <mx:Button id="saveBtn"
                label="{resourceManager.getString('ProductPage', 'Save')}"
                click="saveProductListener(event)"/>
        </mx:FormItem>
    </mx:Form>
</mx:TitleWindow>
