<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow
	title="Product Form"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	creationComplete="init(event)"
	layout="absolute">
	
	<mx:Script>
		<![CDATA[
			import mx.events.ValidationResultEvent;
			import mx.controls.LinkButton;
			import mx.controls.Button;
			import com.j_nid.models.JNidModelLocator;
			import com.j_nid.controls.EventNames;
			import com.j_nid.utils.CairngormUtils;
			import com.j_nid.models.Product;
			import com.j_nid.models.ProductType;
			import mx.managers.PopUpManager;
			import mx.events.FlexEvent;
			
			[Bindable]
			private var model:JNidModelLocator = JNidModelLocator.getInstance();
			[Bindable]
			public var product:Product;
			private var closeBtn:LinkButton;
			
			
			private function init(e:FlexEvent):void {
				PopUpManager.centerPopUp(this);
			}
			
			override protected function createChildren():void {
				super.createChildren();
				closeBtn = new LinkButton();
				closeBtn.label = "x";
				closeBtn.addEventListener(MouseEvent.CLICK, closeBtnClick);
				rawChildren.addChild(closeBtn);
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void	{
				super.updateDisplayList(unscaledWidth, unscaledHeight);	
				var margin:int = 4;	
				var pixelsFromTop:int = 5;
				var pixelsFromRight:int = 10;
				closeBtn.setActualSize(30 + margin, 20 + margin);
				var buttonWidth:int = closeBtn.width;
				var xPos:int = unscaledWidth - buttonWidth - pixelsFromRight;
				var yPos:int = pixelsFromTop;
				closeBtn.move(xPos, yPos);
			}
		
			private function saveProductListener(e:MouseEvent):void {
				if (isProductValid()) {
					var product:Product = new Product();
					product.name = nameField.text;
					product.typeID = typeField.selectedItem.id;
					product.unit = unitField.value;
					product.pricePerUnit = pricePerUnitField.value;
					product.isSale = isSaleField.selected;
					CairngormUtils.dispatchEvent(EventNames.CREATE_PRODUCT, product);
				}
			}
			
			private function isProductValid():Boolean {
				var validatorResult:ValidationResultEvent = nameValidator.validate();
				return validatorResult.type == ValidationResultEvent.VALID;
			}
			
			private function closeBtnClick(e:MouseEvent):void {
				PopUpManager.removePopUp(this);
			}
		]]>
	</mx:Script>
	
	<mx:Form
		width="100%" height="100%">
		
		<mx:FormItem label="Name"
			required="true"
			width="100%">
			
			<mx:TextInput id="nameField"
				width="100%" height="30"/>
		</mx:FormItem>
		
		<mx:FormItem label="Type"
			width="100%">
			
			<mx:ComboBox id="typeField" 
				dataProvider="{model.productTypes}"
				itemRenderer="com.j_nid.components.mxml.ProductTypeComboRenderer"
				width="100%" height="30"/>
		</mx:FormItem>
		
		<mx:FormItem label="Unit"
			width="100%">
			
			<mx:NumericStepper id="unitField"
				minimum="1" maximum="100000"
				width="100%" height="30"/>
		</mx:FormItem>
		
		<mx:FormItem label="Price Per Unit" width="100%">
			<mx:NumericStepper id="pricePerUnitField"
				minimum="0.25" maximum="100000"
				stepSize="0.25"
				width="100%" height="30"/>
		</mx:FormItem>
		
		<mx:FormItem label="Is Sale">
			<mx:CheckBox id="isSaleField"/>
		</mx:FormItem>
		
		<mx:FormItem>
			<mx:Button id="saveBtn"
				label="Save" click="saveProductListener(event)"/>
		</mx:FormItem>
	</mx:Form>
	
	<mx:StringValidator id="nameValidator"
		source="{nameField}" property="text"
		trigger="{saveBtn}" triggerEvent="click"
		required="true"/>
</mx:TitleWindow>
