<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
    creationComplete="createtionComplete(event)"
    show="showHandler(event)"
    width="100%"
    height="100%">
    
    <mx:Metadata>
        [ResourceBundle("SupplyPage")]
    </mx:Metadata>
    
    <mx:Script>
        <![CDATA[
        	import com.j_nid.controls.ApplicationManager;
        	import mx.controls.Alert;
        	import mx.events.CloseEvent;
            import mx.resources.ResourceBundle;
            import com.j_nid.utils.Utils;
            import mx.collections.ListCollectionView;
            import mx.binding.utils.ChangeWatcher;
            import mx.events.FlexEvent;
            import com.j_nid.models.Supply;
            import com.j_nid.models.Person;
            import mx.collections.SortField;
            import mx.collections.Sort;
            import mx.collections.ArrayCollection;
            import com.j_nid.utils.CairngormUtils;
            import com.j_nid.events.JNidEvent;
            import com.j_nid.models.SupplyItem;
            
            [Bindable]
            private var people:ArrayCollection;
            [Bindable]
            private var supplies:ArrayCollection;
            [Bindable]
            private var selectedSupply:Supply;
            private var appMgr:ApplicationManager =
                ApplicationManager.getInstance();
            private var formatPrice:Function = Utils.formatPrice;
            
            private function createtionComplete(e:FlexEvent):void {
                // Create people.
                people = new ArrayCollection(Person.all());
                var sort:Sort = new Sort();
                sort.fields = [new SortField("name")];
                people.sort = sort;
                people.filterFunction = 
                    function(obj:Object):Boolean {
                        return Person(obj).isSupplier;
                    };
                supplierList.dataProvider = people;
                // Create supplies.
                supplies = new ArrayCollection(Supply.all());
                sort = new Sort();
                sort.fields = [new SortField("created", false, true)];
                supplies.sort = sort;
                supplies.filterFunction =
                    function(obj:Object):Boolean {
                        var supply:Supply = Supply(obj);
                        return checkSupplier(supply.person) &&
                               checkDate(supply.created);
                    };
                supplyList.dataProvider = supplies; 
                // Add change watchers.
                ChangeWatcher.watch(supplierList, "selectedIndex", filterSupply);
                ChangeWatcher.watch(dateField, "selectedRanges", filterSupply);
            }
            
            private function supplyDeleted(e:JNidEvent):void {
                supplies.refresh();
                selectedSupply = null;
            }
            
            private function supplyItemDeleted(e:JNidEvent):void {
                // set null first for invoke data binding.
                selectedSupply = null;
                selectedSupply = e.data.supply;
            }
            
            private function showHandler(e:FlexEvent):void {
                people.refresh();
                initData();
            }
            
            private function initData():void {
                var today:Date = new Date();
                var rangeEnd:Date = new Date(today.fullYear, today.month, today.date);
                var rangeStart:Date = Utils.moveDateByDay(rangeEnd, -7);
                dateField.selectedRanges = [{rangeStart: rangeStart, rangeEnd: rangeEnd}];
            }
            
            private function filterSupply(e:Event):void {
                supplies.refresh();
            }
            
            private function checkSupplier(person:Person):Boolean {
                if (supplierList.selectedItem == null) {
                    return true;
                }
                return person == supplierList.selectedItem;
            }
            
            private function checkDate(date:Date):Boolean {
                if (dateField.selectedRanges.length == 0) {
                    return true;
                }
                for each (var obj:Object in dateField.selectedRanges) {
                    var start:Date = new Date(obj.rangeStart.time);
                    var end:Date = new Date(obj.rangeEnd.time);
                    // Move end date to the midnight of the next day.
                    end = Utils.moveDateByDay(end, 1);
                    if (date >= start && date < end) {
                        return true;
                    }
                }
                return false;
            }            
            
            private function searchChange(e:Event):void {
                var sort:Sort = new Sort();
                sort.fields = [new SortField("sortIndex"), new SortField("name")];
                people.sort = sort;
                people.filterFunction = 
                    function(obj:Object):Boolean {
                        var person:Person = Person(obj);
                        return person.isSupplier &&
                               person.name.indexOf(supplierSearchField.text) != -1;
                    };
                people.refresh();
            }
            
            private function deleteSupplyClick(e:MouseEvent):void {
                var supply:Supply = Supply(supplyList.selectedItem);
                appMgr.showConfirm(
                    resourceManager.getString('SupplyPage',
                        'ConfirmMessage'),
                    resourceManager.getString('SupplyPage',
                        'ConfirmTitle'),
                    function(e:CloseEvent):void {
                    	if (e.detail == Alert.OK) {
                    	    supply.addEventListener(JNidEvent.SUPPLY_DELETED,
                    	       supplyDeleted);
                            supply.remove();
                        }
                    });
            }
            
            private function itemListKeyDown(e:KeyboardEvent):void {
                var item:SupplyItem = SupplyItem(supplyItemList.selectedItem);
                if (e.keyCode == Keyboard.DELETE && item != null) {
                    appMgr.showConfirm(
                        resourceManager.getString('SupplyPage',
                            'ConfirmMessage'),
                        resourceManager.getString('SupplyPage',
                            'ConfirmTitle'),
                        function(e:CloseEvent):void {
			                if (e.detail == Alert.OK) {
			                    if (item.supply.supplyItems.length > 1) {
			                        item.addEventListener(
                                        JNidEvent.SUPPLY_ITEM_DELETED,
                                        supplyItemDeleted);
			                        item.remove();
			                    } else {
			                        item.supply.addEventListener(
                                        JNidEvent.SUPPLY_DELETED,
                                        supplyDeleted);
			                        item.supply.remove();
			                    }
			                }
                        });
                }
            }
            
            private function formatPriceGrid(item:Object,
                                         column:DataGridColumn):String {
                                              
                return formatPrice(item[column.dataField]);
            }
        ]]>
    </mx:Script>
    
    <mx:DateFormatter id="dateFormatter" formatString="DD/MM/YY J:NN:SS"/>
    
    <mx:Panel
    	title="{resourceManager.getString('SupplyPage', 'Filter')}"
        paddingTop="5"
        width="220"
        height="100%">
        
        <mx:FormItem label="{resourceManager.getString(
                                  'SupplyPage', 'SearchSupplier')}:"
            paddingRight="5"
            paddingLeft="5"
            width="100%">
            
            <mx:TextInput id="supplierSearchField"
                change="searchChange(event)"
                width="100%"/>
        </mx:FormItem>
        
        <mx:List id="supplierList"
            labelField="name"
            borderThickness="0"
            width="100%"
            height="100%"/>
        
        <mx:DateChooser id="dateField"
            cornerRadius="0"
            width="100%"/>
    </mx:Panel>
    
    <mx:Panel
    	title="{resourceManager.getString('SupplyPage', 'Supply')}"
        width="250"
        height="100%">
        
        <mx:List id="supplyList"
        	change="selectedSupply=Supply(supplyList.selectedItem)"
            width="100%"
            height="100%"/>
    </mx:Panel>
    
    <mx:Panel
    	title="{resourceManager.getString('SupplyPage', 'Detail')}" 
        layout="vertical"
        paddingLeft="5"
        paddingRight="5" 
        paddingTop="5"
        width="100%"
        height="100%">
        
        <mx:HBox 
            horizontalAlign="right"
            paddingTop="5"
            paddingRight="5" 
            width="100%"
            height="35"> 
            
            <mx:Label
            	text="{selectedSupply.person.name}"/>
            
            <mx:Label
            	text="{dateFormatter.format(selectedSupply.created)}"/>
        </mx:HBox>
        
        <mx:DataGrid id="supplyItemList" 
            dataProvider="{selectedSupply.supplyItems}"
            textAlign="center"
            keyDown="itemListKeyDown(event)"
            headerStyleName="centerHeader"
            width="100%"
            height="100%">
            
            <mx:columns>
                <mx:DataGridColumn
                    headerText="{resourceManager.getString('SupplyPage', 'Quantity')}"
                    dataField="quantity"
                    width="50"/>
                
                <mx:DataGridColumn
                    headerText="{resourceManager.getString('SupplyPage', 'Name')}"
                    dataField="name"/>
                
                <mx:DataGridColumn
                    headerText="{resourceManager.getString('SupplyPage', 'Unit')}"
                    dataField="unit"
                    textAlign="right"
                    width="50"/>
                
                <mx:DataGridColumn
                    headerText="{resourceManager.getString('SupplyPage', 'PricePerUnit')}"
                    dataField="pricePerUnit"
                    labelFunction="formatPriceGrid"
                    textAlign="right"
                    width="85"/>
                
                <mx:DataGridColumn
                    headerText="{resourceManager.getString('SupplyPage', 'Total')}"
                    dataField="total"
                    labelFunction="formatPriceGrid" 
                    textAlign="right"
                    width="85"/>
            </mx:columns>
        </mx:DataGrid>
        
        <mx:HBox
        	horizontalAlign="right"
        	paddingRight="5"
            width="100%"
            height="35">
            
            <mx:Label
            	text="{resourceManager.getString('SupplyPage', 'Summary',
                            [formatPrice(selectedSupply.total)])}"/>
        </mx:HBox>
        
        <mx:ControlBar horizontalAlign="right">
        
            <mx:Button
            	label="{resourceManager.getString('SupplyPage', 'Delete')}"
            	enabled="{supplyList.selectedItem != null}"
                click="deleteSupplyClick(event)"/>
        </mx:ControlBar>
    </mx:Panel>
</mx:HBox>
