<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
	show="showHandler(event)"
	creationComplete="init(event)"
	width="100%"
	height="100%">
	
	<mx:Metadata>
		[ResourceBundle("ProductPage")]
	</mx:Metadata>
	
	<mx:Script>
		<![CDATA[
		    import com.j_nid.controls.ApplicationManager;
			import mx.collections.SortField;
			import mx.collections.Sort;
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import com.j_nid.components.mxml.forms.ProductForm;
			import com.j_nid.components.mxml.forms.ProductTypeForm;
			import com.j_nid.events.JNidEvent;
			import com.j_nid.models.Product;
			import com.j_nid.models.ProductType;
			import com.j_nid.utils.CairngormUtils;
			import mx.collections.ListCollectionView;
			import mx.core.Application;
			import mx.events.ListEvent;
			import mx.resources.ResourceBundle;
			
		    private var appMgr:ApplicationManager =
                ApplicationManager.getInstance();
            [Bindable]
            private var products:ArrayCollection;
            [Bindable]
            private var productTypes:ArrayCollection;
            private var selectedProductType:ProductType;
            private var productForm:ProductForm;
            private var productTypeForm:ProductTypeForm;
            
            private function init(e:FlexEvent):void {
                // Create products.
                products = new ArrayCollection(Product.all());
                var sort:Sort = new Sort();
                sort.fields = [new SortField("productType"), new SortField("name")];
                products.sort = sort;
                productList.dataProvider = products;
                // Create product types.
                productTypes = new ArrayCollection(ProductType.all());
                productTypeList.dataProvider = productTypes;
                // init selected product.
                selectedProductType = ProductType.ALL_TYPE;
            }
            
            private function showHandler(e:FlexEvent):void {
                productTypeCombo.dataProvider = ProductType.all(true);
                products.refresh();
            }
            
            private function productSaved(e:JNidEvent):void {
                var product:Product = Product(e.data);
                var type:ProductType = product.productType;
                productTypeCombo.selectedItem = type;
                selectedProductType = type;
                filterProduct();
                productList.selectedItem = product;
                CairngormUtils.dispatchEvent(JNidEvent.CLOSE_POPUP,
                    productForm);
            }
            
            private function productTypeSaved(e:JNidEvent):void {
                productTypes.refresh();
                var productType:ProductType = ProductType(e.data);
                productTypeList.selectedItem = productType;
                productTypeCombo.selectedItem = selectedProductType;
                CairngormUtils.dispatchEvent(JNidEvent.CLOSE_POPUP,
                    productTypeForm);
            }
            
            private function productTypeComboChange(e:ListEvent):void {
                var type:ProductType = ProductType(productTypeCombo.selectedItem);
                selectedProductType = type;
                filterProduct();
            }
            
            private function filterProduct():void {
                if (selectedProductType == ProductType.ALL_TYPE) {
                    products.filterFunction = null;
                } else {
                    products.filterFunction =
                       function(obj:Object):Boolean {
                           return Product(obj).productType == selectedProductType;
                       };
                }
                products.refresh();
            }
            
            internal function updateProductTypeColor(type:ProductType, color:uint):void {
                type.color = color;
                type.save();
            }
            
            private function newProductBtnClick(e:MouseEvent):void {
                var product:Product = new Product()
                product.addEventListener(JNidEvent.PRODUCT_CREATED,
                    productSaved);
                productForm = ProductForm(appMgr.createPopUp(ProductForm));
                productForm.product = product;
            }
            
            private function newProductTypeBtnClick(e:MouseEvent):void {
                productTypeForm =
                    ProductTypeForm(appMgr.createPopUp(ProductTypeForm));
                var productType:ProductType = new ProductType();
                productType.addEventListener(JNidEvent.PRODUCT_TYPE_CREATED,
                    productTypeSaved);
                productTypeForm.productType = productType;
            }
            
            private function productTypeDgDoubleClick(e:MouseEvent):void {
                productTypeForm =
                    ProductTypeForm(appMgr.createPopUp(ProductTypeForm));
                var productType:ProductType = 
                    ProductType(productTypeList.selectedItem);
                productType.addEventListener(JNidEvent.PRODUCT_TYPE_UPDATED,
                    productTypeSaved);
                productTypeForm.productType = productType;
            }
            
            private function productDgDoubleClick(e:MouseEvent):void {
                var product:Product = Product(productList.selectedItem);
                product.addEventListener(JNidEvent.PRODUCT_UPDATED,
                    productSaved);
                productForm = ProductForm(appMgr.createPopUp(ProductForm));
                productForm.product = product;
            }
        ]]>
    </mx:Script>
    
    <mx:TabNavigator 
        paddingLeft="5"
        paddingRight="5"
        width="100%"
        height="100%">
        
        <mx:VBox
            label="{resourceManager.getString('ProductPage', 'Product')}"
            width="100%"
            height="100%">
            
            <mx:HBox 
                verticalAlign="middle"
                width="100%">
                
                <mx:Label text="{resourceManager.getString(
                                    'ProductPage', 'ProductType')}:"/>
                
                <mx:ComboBox id="productTypeCombo"
                    change="productTypeComboChange(event)"
                    itemRenderer="com.j_nid.components.mxml.ProductTypeComboRenderer"/>
                    
                <mx:Spacer
                    width="100%"/>
                    
                <mx:Button
                    label="{resourceManager.getString('ProductPage', 'Add')}"
                    click="newProductBtnClick(event)"/>
            </mx:HBox>
                
            <mx:DataGrid id="productList"
                doubleClickEnabled="true"
                doubleClick="productDgDoubleClick(event)"
                headerStyleName="centerHeader"
                width="100%"
                height="100%">
                
                <mx:columns>
                    <mx:DataGridColumn 
                        headerText="{resourceManager.getString(
                                          'ProductPage', 'Name')}" 
                        dataField="name"/>
                        
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString(
                                          'ProductPage', 'ProductType')}"
                        dataField="productType"/>
                        
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString(
                                          'ProductPage', 'Unit')}"
                        dataField="unit"/>
                        
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString(
                                          'ProductPage', 'PricePerUnit')}"
                        dataField="pricePerUnit"/>
                        
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString(
                                          'ProductPage', 'IsSale')}"
                        dataField="isSale"
                        itemRenderer="com.j_nid.components.mxml.ProductRenderer"/>
                </mx:columns>
            </mx:DataGrid>
        </mx:VBox>
        
        <mx:VBox
            label="{resourceManager.getString('ProductPage', 'ProductType')}"
            width="100%"
            height="100%">
            
            <mx:HBox
                horizontalAlign="right"
                width="100%">
                
                <mx:Button
                    label="{resourceManager.getString('ProductPage', 'Add')}"
                    click="newProductTypeBtnClick(event)"/>
            </mx:HBox>
            
            <mx:DataGrid id="productTypeList"
                doubleClickEnabled="true"
                doubleClick="productTypeDgDoubleClick(event)"
                headerStyleName="centerHeader"
                width="100%"
                height="100%">
                
                <mx:columns>
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString(
                                          'ProductPage', 'Name')}">

                        <mx:itemRenderer>
                            <mx:Component>
<mx:Label text="{data.name}" color="{data.color}"/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    
                    <mx:DataGridColumn
                        headerText="{resourceManager.getString(
                                          'ProductPage', 'Color')}">
                        
                        <mx:itemRenderer>
                            <mx:Component>
<mx:Canvas>
    <mx:Script>
        <![CDATA[
            import com.j_nid.models.ProductType;
        ]]>
    </mx:Script>
    <mx:ColorPicker id="colorPicker" selectedColor="{data.color}" 
        change="{outerDocument.updateProductTypeColor(
                      ProductType(data), colorPicker.selectedColor)}"/>
</mx:Canvas>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                </mx:columns>
            </mx:DataGrid>
        </mx:VBox>
    </mx:TabNavigator>
</mx:Canvas>
