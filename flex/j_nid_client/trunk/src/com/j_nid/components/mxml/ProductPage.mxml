<?xml version="1.0" encoding="utf-8"?>
<mx:HDividedBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">
	
	<mx:Script>
		<![CDATA[
			import com.j_nid.components.mxml.forms.ProductTypeForm;
			import com.j_nid.components.mxml.forms.ProductForm;
			import mx.core.Application;
			import mx.managers.PopUpManager;
			import mx.collections.SortField;
			import mx.collections.Sort;
			import com.j_nid.controls.EventNames;
			import com.j_nid.utils.CairngormUtils;
			import mx.collections.ArrayCollection;
			import com.j_nid.models.Product;
			import com.j_nid.models.ProductType;
			import com.j_nid.models.JNidModelLocator;
			
			[Bindable]
			private var model:JNidModelLocator = JNidModelLocator.getInstance();
			
			private function filterByType(type:ProductType):void {
				if (type == JNidModelLocator.ALL_TYPE) {
					model.products.filterFunction = null;
				} else {
					model.products.filterFunction = function(obj:Object):Boolean {
						return Product(obj).type == type;
					}
				}
				model.products.refresh();
			}
			
			internal function updateProductTypeColor(type:ProductType, color:uint):void {
				type.color = color;
				CairngormUtils.dispatchEvent(EventNames.UPDATE_PRODUCT_TYPE, type);
			}
			
			private function newProductBtnClick(e:MouseEvent):void {
				PopUpManager.createPopUp(Application(Application.application),
					ProductForm, true);
			}
			
			private function newProductTypeBtnClick(e:MouseEvent):void {
				PopUpManager.createPopUp(Application(Application.application),
					ProductTypeForm, true);
			}
		]]>
	</mx:Script>
	
	<mx:TabNavigator 
		paddingLeft="5" paddingRight="5"
		width="100%" height="100%">
		
		<mx:VBox label="Product"
			width="100%" height="100%">
			
			<mx:HBox 
				verticalAlign="middle"
				width="100%">
				
				<mx:Label text="Product Type"/>
				
				<mx:ComboBox id="productTypeCombo" 
					dataProvider="{model.productTypesWithAll}" 
					change="filterByType(ProductType(productTypeCombo.selectedItem))"
					itemRenderer="com.j_nid.components.mxml.ProductTypeComboRenderer"
					width="200" height="30"/>
					
				<mx:Spacer width="100%"/>
					
				<mx:Button
					label="New Product"
					click="newProductBtnClick(event)"/>
			</mx:HBox>
				
			<mx:DataGrid id="productDg" 
				dataProvider="{model.products}"
				width="100%" height="100%">
				<mx:columns>
					<mx:DataGridColumn headerText="Name" dataField="name"/>
					<mx:DataGridColumn headerText="Type" dataField="type"/>
					<mx:DataGridColumn headerText="Unit" dataField="unit"/>
					<mx:DataGridColumn headerText="Price/Unit"
						dataField="pricePerUnit"/>
					<mx:DataGridColumn headerText="Is Sale" dataField="isSale" 
						itemRenderer="com.j_nid.components.mxml.ProductRenderer"/>
				</mx:columns>
			</mx:DataGrid>
		</mx:VBox>
		
		<mx:VBox label="Product Type"
			width="100%" height="100%">
			
			<mx:HBox
				horizontalAlign="right"
				width="100%">
				
				<mx:Button
					label="New Product Type"
					click="newProductTypeBtnClick(event)"/>
			</mx:HBox>
			
			<mx:DataGrid id="productTypeDg"
				dataProvider="{model.productTypes}"
				width="100%" height="100%">
				<mx:columns>
					<mx:DataGridColumn headerText="Name">
						<mx:itemRenderer>
							<mx:Component>
<mx:Label text="{data.name}" color="{data.color}"/>
							</mx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn headerText="Color">
						<mx:itemRenderer>
							<mx:Component>
<mx:Canvas>
	<mx:Script>
		<![CDATA[
			import com.j_nid.models.ProductType;
		]]>
	</mx:Script>
	<mx:ColorPicker id="colorPicker" selectedColor="{data.color}" 
		change="{outerDocument.updateProductTypeColor(ProductType(data), colorPicker.selectedColor)}"/>
</mx:Canvas>
							</mx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>
				</mx:columns>
			</mx:DataGrid>
		</mx:VBox>
	</mx:TabNavigator>
</mx:HDividedBox>
